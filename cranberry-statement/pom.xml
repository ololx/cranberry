<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--[parent-->
    <parent>
        <groupId>io.github.ololx</groupId>
        <artifactId>cranberry</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../</relativePath>
    </parent>
    <!--parent]-->

    <!--[artifact-->
    <groupId>io.github.ololx.cranberry</groupId>
    <artifactId>cranberry-statement</artifactId>
    <packaging>jar</packaging>
    <!--artifact]-->

    <!--[info-->
    <name>${project.groupId}:${project.artifactId}</name>
    <description>
        The cranberry statement is a module of cranberry library (see cranberry). This module provides an api for the
        statements validation (such as not null and e.t.c.). This module includes an annotations for the injecting methods
        of this api into code during compilation.
    </description>
    <!--info]-->

    <!--[dependencies-->
    <dependencies>
        <!--[cranberry-commons-->
        <dependency>
            <groupId>io.github.ololx.cranberry</groupId>
            <artifactId>cranberry-commons</artifactId>
            <scope>compile</scope>
        </dependency>
        <!--cranberry-commons]-->
    </dependencies>
    <!--dependencies]-->

    <!--[build-->
    <build>
        <!--[build module-->
        <plugins>
            <!--[compiling source-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${plugin.maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <compilerArgument>-proc:none</compilerArgument>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-project</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--compiling source]-->

            <!--[packaging to jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${plugin.maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${plugin.maven-jar-plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>libs/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!--packaging to jar]-->
        </plugins>
        <!--build module]-->
    </build>
    <!--build]-->

</project>