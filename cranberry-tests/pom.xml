<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--[parent-->
    <parent>
        <groupId>io.github.ololx</groupId>
        <artifactId>cranberry</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../</relativePath>
    </parent>
    <!--parent]-->

    <!--[artifact-->
    <groupId>io.github.ololx.cranberry</groupId>
    <artifactId>cranberry-tests</artifactId>
    <!--artifact]-->

    <!--[info-->
    <name>${project.groupId}:${project.artifactId}</name>
    <description>
        The cranberry tests is a module of cranberry library (see cranberry). This module provides the unit tests
        for the remaining modules of the cranberry project.
    </description>
    <!--info]-->

    <!--[properties-->
    <properties>
        <!--[dependencies versions-->
        <dependency.testng.version>7.1.0</dependency.testng.version>
        <!--dependencies versions]-->

        <!--[plugins versions-->
        <plugin.maven-shade-plugin.version>3.2.3</plugin.maven-shade-plugin.version>
        <!--plugins versions]-->
    </properties>
    <!--properties]-->

    <!--[dependencies-->
    <dependencies>
        <!--[test-->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${dependency.testng.version}</version>
            <scope>test</scope>
        </dependency>
        <!--test]-->

        <!--[project modules-->
        <dependency>
            <groupId>io.github.ololx.cranberry</groupId>
            <artifactId>cranberry-logging</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.github.ololx.cranberry</groupId>
            <artifactId>cranberry-statement</artifactId>
            <scope>test</scope>
        </dependency>
        <!--project modules]-->
    </dependencies>

    <!--[build-->
    <build>
        <!--[build module-->
        <plugins>
            <!--[testing-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <reportFormat>plain</reportFormat>
                    <parallel>methods</parallel>
                    <threadCount>6</threadCount>
                    <systemPropertyVariables>
                        <jacoco-agent.destfile>**/jacoco.exec</jacoco-agent.destfile>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <suiteXmlFile>
                            ${project.basedir}/src/test/resources/annotation_test_suite.xml
                        </suiteXmlFile>
                        <suiteXmlFile>
                            ${project.basedir}/src/test/resources/statements_test_suite.xml
                        </suiteXmlFile>
                        <suiteXmlFile>
                            ${project.basedir}/src/test/resources/resources_test_suite.xml
                        </suiteXmlFile>
                        <suiteXmlFile>
                            ${project.basedir}/src/test/resources/exception_test_suite.xml
                        </suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>
            <!--testing]-->

            <!--[reporting code coverage-->
            <!--used for codecov.io-->
            <plugin>
                 <groupId>org.jacoco</groupId>
                 <artifactId>jacoco-maven-plugin</artifactId>
                 <version>${plugin.jacoco-maven-plugin.version}</version>
                 <executions>
                     <execution>
                         <goals>
                             <goal>prepare-agent</goal>
                         </goals>
                     </execution>
                     <execution>
                         <id>report-aggregate</id>
                         <phase>verify</phase>
                         <goals>
                             <goal>report-aggregate</goal>
                         </goals>
                         <configuration>
                             <dataFileIncludes>
                                 <dataFileInclude>**/jacoco.exec</dataFileInclude>
                             </dataFileIncludes>
                             <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                         </configuration>
                     </execution>
                 </executions>
             </plugin>
            <!--reporting code coverage]-->

            <!--[managing resources-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-classes-to-test-module</id>
                        <goals>
                            <goal>testResources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/../cranberry-logging/target/classes</directory>
                                    <directory>${project.basedir}/../cranberry-statement/target/classes</directory>
                                </resource>
                            </resources>
                            <outputDirectory>
                                ${project.build.outputDirectory}
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--managing resources]-->
        </plugins>
        <!--build module]-->
    </build>
    <!--build]-->

</project>
