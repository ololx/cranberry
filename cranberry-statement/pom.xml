<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.github.ololx</groupId>
        <artifactId>cranberry</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../</relativePath>
    </parent>

    <groupId>io.github.ololx.cranberry</groupId>
    <artifactId>cranberry-statement</artifactId>
    <name>cranberry-statement</name>
    <description>
        The cranberry statement is a module of cranberry library (see cranberry). This module provides an api for the
        statements validation (such as not null and e.t.c.). This module includes an annotations for the injecting methods
        of this api into code during compilation.
    </description>

    <packaging>jar</packaging>

    <dependencies>
        <!--<cranberry-commons-->
        <dependency>
            <groupId>io.github.ololx.cranberry</groupId>
            <artifactId>cranberry-commons</artifactId>
            <scope>compile</scope>
        </dependency>
        <!--cranberry-commons>-->
    </dependencies>

    <build>
        <plugins>
            <!--<compiler-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <configuration>
                            <compilerArgument>-proc:none</compilerArgument>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-project</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--compiler>-->
        </plugins>
    </build>
</project>